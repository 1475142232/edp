package com.edp.admin.influenceController;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.edp.admin.tree.TreeController;
import com.edp.serviceI.functionInfo.FunctionInfoServiceI;
import com.google.gson.Gson;

@Controller
@RequestMapping("influenceController")
public class influenceController {
	
	@Autowired
	private FunctionInfoServiceI functionInfoServiceI;
	private static final Logger LOGGER = LoggerFactory.getLogger(TreeController.class);
	private Gson gson = new Gson();
	
	/**
	 * 
	 * @time 2016/6/20
	 * @author zhang_cancan
	 */
	@RequestMapping(value = "/findSceneByColumnId.action" , method = { RequestMethod.GET,RequestMethod.POST })
	@ResponseBody
	public String findSceneByColumnId(String ColumnId){
		String SceneFunction=functionInfoServiceI.findSceneByColumnId(ColumnId);		
		return gson.toJson(SceneFunction);
	}
	
	/**
	 * 
	 * @time 2016/6/20
	 * @author zhang_cancan
	 */
	@RequestMapping(value = "/findSceneByTableId.action" , method = { RequestMethod.GET,RequestMethod.POST })
	@ResponseBody
	public String findSceneByTableId(String TableId){
		String SceneFunction=functionInfoServiceI.findSceneByTableId(TableId);		
		return gson.toJson(SceneFunction);
	}
	
	/**
	 * 
	 * @time 2016/6/20
	 * @author zhang_cancan
	 */
	@RequestMapping(value = "/findSceneByFuncId.action" , method = { RequestMethod.GET,RequestMethod.POST })
	@ResponseBody
	public String findSceneByFuncId(String FuncId){
		String SceneFunction=functionInfoServiceI.findSceneByFuncId(FuncId);	
		return gson.toJson(SceneFunction);
	}

}
