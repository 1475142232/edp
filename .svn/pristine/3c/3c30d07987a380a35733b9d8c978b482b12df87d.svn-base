<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.edp.dao.mapper.TreeInfoPoMapper" >
  <resultMap id="BaseResultMap" type="com.edp.dao.domain.TreeInfoPo" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="tree_name" property="treeName" jdbcType="VARCHAR" />
    <result column="tree_type" property="treeType" jdbcType="VARCHAR" />
    <result column="tree_state" property="treeState" jdbcType="VARCHAR" />
    <result column="tree_parent" property="treeParent" jdbcType="VARCHAR" />
    <result column="tree_leaf" property="treeLeaf" jdbcType="VARCHAR" />
    <result column="tree_id" property="treeId" jdbcType="VARCHAR" />
    <result column="task_id" property="taskId" jdbcType="VARCHAR" />
    <result column="tree_creat" property="treeCreat" jdbcType="INTEGER" />
    <result column="tree_creattime" property="treeCreattime" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, tree_name, tree_type, tree_state, tree_parent, tree_leaf, tree_id, task_id, tree_creat, 
    tree_creattime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.edp.dao.domain.TreeInfoPoCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tree_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from tree_info
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from tree_info
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.edp.dao.domain.TreeInfoPoCriteria" >
    delete from tree_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.edp.dao.domain.TreeInfoPo" >
    insert into tree_info (id, tree_name, tree_type, 
      tree_state, tree_parent, tree_leaf, 
      tree_id, task_id, tree_creat, 
      tree_creattime)
    values (#{id,jdbcType=VARCHAR}, #{treeName,jdbcType=VARCHAR}, #{treeType,jdbcType=VARCHAR}, 
      #{treeState,jdbcType=VARCHAR}, #{treeParent,jdbcType=VARCHAR}, #{treeLeaf,jdbcType=VARCHAR}, 
      #{treeId,jdbcType=VARCHAR}, #{taskId,jdbcType=VARCHAR}, #{treeCreat,jdbcType=INTEGER}, 
      #{treeCreattime,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.edp.dao.domain.TreeInfoPo" >
    insert into tree_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="treeName != null" >
        tree_name,
      </if>
      <if test="treeType != null" >
        tree_type,
      </if>
      <if test="treeState != null" >
        tree_state,
      </if>
      <if test="treeParent != null" >
        tree_parent,
      </if>
      <if test="treeLeaf != null" >
        tree_leaf,
      </if>
      <if test="treeId != null" >
        tree_id,
      </if>
      <if test="taskId != null" >
        task_id,
      </if>
      <if test="treeCreat != null" >
        tree_creat,
      </if>
      <if test="treeCreattime != null" >
        tree_creattime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="treeName != null" >
        #{treeName,jdbcType=VARCHAR},
      </if>
      <if test="treeType != null" >
        #{treeType,jdbcType=VARCHAR},
      </if>
      <if test="treeState != null" >
        #{treeState,jdbcType=VARCHAR},
      </if>
      <if test="treeParent != null" >
        #{treeParent,jdbcType=VARCHAR},
      </if>
      <if test="treeLeaf != null" >
        #{treeLeaf,jdbcType=VARCHAR},
      </if>
      <if test="treeId != null" >
        #{treeId,jdbcType=VARCHAR},
      </if>
      <if test="taskId != null" >
        #{taskId,jdbcType=VARCHAR},
      </if>
      <if test="treeCreat != null" >
        #{treeCreat,jdbcType=INTEGER},
      </if>
      <if test="treeCreattime != null" >
        #{treeCreattime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.edp.dao.domain.TreeInfoPoCriteria" resultType="java.lang.Integer" >
    select count(*) from tree_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tree_info
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.treeName != null" >
        tree_name = #{record.treeName,jdbcType=VARCHAR},
      </if>
      <if test="record.treeType != null" >
        tree_type = #{record.treeType,jdbcType=VARCHAR},
      </if>
      <if test="record.treeState != null" >
        tree_state = #{record.treeState,jdbcType=VARCHAR},
      </if>
      <if test="record.treeParent != null" >
        tree_parent = #{record.treeParent,jdbcType=VARCHAR},
      </if>
      <if test="record.treeLeaf != null" >
        tree_leaf = #{record.treeLeaf,jdbcType=VARCHAR},
      </if>
      <if test="record.treeId != null" >
        tree_id = #{record.treeId,jdbcType=VARCHAR},
      </if>
      <if test="record.taskId != null" >
        task_id = #{record.taskId,jdbcType=VARCHAR},
      </if>
      <if test="record.treeCreat != null" >
        tree_creat = #{record.treeCreat,jdbcType=INTEGER},
      </if>
      <if test="record.treeCreattime != null" >
        tree_creattime = #{record.treeCreattime,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tree_info
    set id = #{record.id,jdbcType=VARCHAR},
      tree_name = #{record.treeName,jdbcType=VARCHAR},
      tree_type = #{record.treeType,jdbcType=VARCHAR},
      tree_state = #{record.treeState,jdbcType=VARCHAR},
      tree_parent = #{record.treeParent,jdbcType=VARCHAR},
      tree_leaf = #{record.treeLeaf,jdbcType=VARCHAR},
      tree_id = #{record.treeId,jdbcType=VARCHAR},
      task_id = #{record.taskId,jdbcType=VARCHAR},
      tree_creat = #{record.treeCreat,jdbcType=INTEGER},
      tree_creattime = #{record.treeCreattime,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.edp.dao.domain.TreeInfoPo" >
    update tree_info
    <set >
      <if test="treeName != null" >
        tree_name = #{treeName,jdbcType=VARCHAR},
      </if>
      <if test="treeType != null" >
        tree_type = #{treeType,jdbcType=VARCHAR},
      </if>
      <if test="treeState != null" >
        tree_state = #{treeState,jdbcType=VARCHAR},
      </if>
      <if test="treeParent != null" >
        tree_parent = #{treeParent,jdbcType=VARCHAR},
      </if>
      <if test="treeLeaf != null" >
        tree_leaf = #{treeLeaf,jdbcType=VARCHAR},
      </if>
      <if test="treeId != null" >
        tree_id = #{treeId,jdbcType=VARCHAR},
      </if>
      <if test="taskId != null" >
        task_id = #{taskId,jdbcType=VARCHAR},
      </if>
      <if test="treeCreat != null" >
        tree_creat = #{treeCreat,jdbcType=INTEGER},
      </if>
      <if test="treeCreattime != null" >
        tree_creattime = #{treeCreattime,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.edp.dao.domain.TreeInfoPo" >
    update tree_info
    set tree_name = #{treeName,jdbcType=VARCHAR},
      tree_type = #{treeType,jdbcType=VARCHAR},
      tree_state = #{treeState,jdbcType=VARCHAR},
      tree_parent = #{treeParent,jdbcType=VARCHAR},
      tree_leaf = #{treeLeaf,jdbcType=VARCHAR},
      tree_id = #{treeId,jdbcType=VARCHAR},
      task_id = #{taskId,jdbcType=VARCHAR},
      tree_creat = #{treeCreat,jdbcType=INTEGER},
      tree_creattime = #{treeCreattime,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>