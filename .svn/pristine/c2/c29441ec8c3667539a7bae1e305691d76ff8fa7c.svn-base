package com.edp.admin.tree;

import com.edp.common.utils.SequenceManage;
import com.edp.serviceI.dto.TreeInfoDto;
import com.edp.serviceI.dto.TreeTaskDto;
import com.edp.serviceI.dto.UserInfoDto;
import com.edp.serviceI.tree.TreeServiceI;
import com.google.gson.Gson;


import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;

import javax.servlet.http.HttpSession;

/**
 * 
 * tree请求模块
 * @time  2016/4/20
 * @author zhang_cancan
 *
 */
@Controller
@RequestMapping("TreeController")
public class TreeController {
	
	@Autowired
	private TreeServiceI treeServiceI;
	
	
	private static final Logger LOGGER = LoggerFactory.getLogger(TreeController.class);
	private Gson gson = new Gson();
	
	@RequestMapping(value = "/findTreeById.action" , method = { RequestMethod.GET,RequestMethod.POST })
	@ResponseBody
	public String findTreeById(String productId){
		TreeInfoDto tree=treeServiceI.findTreeById(productId);
		return gson.toJson(tree);		
	}
	
	/**
	 * 查询场景、功能等
	 * zhang_cancan 2016/9/18
	 */
	@RequestMapping(value = "/findTreeByType.action" , method = { RequestMethod.GET,RequestMethod.POST })
	@ResponseBody
	public String findTreeByType(String productId,String type){
		List<TreeInfoDto> typeTree = treeServiceI.findTreeByType(productId,type);
		return gson.toJson(typeTree);
	}
	
	/**
	 * 增加场景、功能等
	 * zhang_cancan 2016/9/20
	 */
	@RequestMapping(value = "/addTreeNode.action" , method = { RequestMethod.GET,RequestMethod.POST })
	@ResponseBody
	public String addTreeNode(TreeInfoDto dto,String taskId, String productId,HttpSession session){
		List<TreeInfoDto> pId = treeServiceI.findParentByproductId(productId);
		String id = SequenceManage.getSequence("");
		dto.setId(id);
		dto.setTreeId(productId);
        if(dto.getTreeType().equals("6")){
        	
        }
		Date today = new Date();
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
		UserInfoDto userDto=(UserInfoDto)session.getAttribute("user");
		TreeTaskDto tt= new TreeTaskDto();
		tt.setTreeId(id);
		return gson.toJson("0000");
	}
}
