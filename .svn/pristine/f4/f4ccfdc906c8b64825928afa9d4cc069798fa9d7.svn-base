package com.edp.service.mail;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.stereotype.Service;

import com.edp.common.utils.BeanCopyUtils;
import com.edp.dao.domain.MailInfoPo;
import com.edp.dao.domain.MailInfoPoCriteria;
import com.edp.dao.mapper.MailInfoPoMapper;
import com.edp.serviceI.dto.MailInfoDto;
import com.edp.serviceI.mail.MailInfoServiceI;

@Service("MailInfoServiceI")
public class MailInfoServiceImpl implements MailInfoServiceI{
	
	@Resource
	private MailInfoPoMapper mailMapper;

	@Override
	public List<MailInfoDto> getMailByUserId(String state, Integer id) {
		MailInfoPoCriteria example = new MailInfoPoCriteria();
		MailInfoPoCriteria.Criteria mailCriteria = example.createCriteria();
		if(state!=null && state!=""){
			String[] s=state.split(",");
			List<String> ss=new ArrayList<String>();
			for(int i=0;i<s.length;i++){
				ss.add(s[i]);
			}
			mailCriteria.andMailStateIn(ss);
		}
		mailCriteria.andUserIdEqualTo(id+"");
		List<MailInfoPo> po = mailMapper.selectByExample(example);
		return BeanCopyUtils.populateTListbyDListBySpring(po, MailInfoDto.class);
	}

	@Override
	public Integer editMail(MailInfoDto dto) {
		MailInfoPo po = BeanCopyUtils.populateTbyDBySpring(dto, MailInfoPo.class);				
		return mailMapper.updateByPrimaryKeySelective(po);
	}

}
