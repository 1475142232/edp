<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.edp.dao.mapper.TaskTracePoMapper" >
  <resultMap id="BaseResultMap" type="com.edp.dao.domain.TaskTracePo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="task_id" property="taskId" jdbcType="VARCHAR" />
    <result column="from_user" property="fromUser" jdbcType="VARCHAR" />
    <result column="to_user" property="toUser" jdbcType="VARCHAR" />
    <result column="operate_time" property="operateTime" jdbcType="VARCHAR" />
    <result column="operate_type" property="operateType" jdbcType="CHAR" />
    <result column="delay_time" property="delayTime" jdbcType="INTEGER" />
    <result column="task_state" property="taskState" jdbcType="CHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.edp.dao.domain.TaskTracePo" extends="BaseResultMap" >
    <result column="operate_spec" property="operateSpec" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, task_id, from_user, to_user, operate_time, operate_type, delay_time, task_state
  </sql>
  <sql id="Blob_Column_List" >
    operate_spec
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.edp.dao.domain.TaskTracePoCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from task_trace
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.edp.dao.domain.TaskTracePoCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from task_trace
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from task_trace
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from task_trace
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.edp.dao.domain.TaskTracePoCriteria" >
    delete from task_trace
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.edp.dao.domain.TaskTracePo" >
    insert into task_trace (id, task_id, from_user, 
      to_user, operate_time, operate_type, 
      delay_time, task_state, operate_spec
      )
    values (#{id,jdbcType=INTEGER}, #{taskId,jdbcType=VARCHAR}, #{fromUser,jdbcType=VARCHAR}, 
      #{toUser,jdbcType=VARCHAR}, #{operateTime,jdbcType=VARCHAR}, #{operateType,jdbcType=CHAR}, 
      #{delayTime,jdbcType=INTEGER}, #{taskState,jdbcType=CHAR}, #{operateSpec,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.edp.dao.domain.TaskTracePo" >
    insert into task_trace
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="taskId != null" >
        task_id,
      </if>
      <if test="fromUser != null" >
        from_user,
      </if>
      <if test="toUser != null" >
        to_user,
      </if>
      <if test="operateTime != null" >
        operate_time,
      </if>
      <if test="operateType != null" >
        operate_type,
      </if>
      <if test="delayTime != null" >
        delay_time,
      </if>
      <if test="taskState != null" >
        task_state,
      </if>
      <if test="operateSpec != null" >
        operate_spec,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="taskId != null" >
        #{taskId,jdbcType=VARCHAR},
      </if>
      <if test="fromUser != null" >
        #{fromUser,jdbcType=VARCHAR},
      </if>
      <if test="toUser != null" >
        #{toUser,jdbcType=VARCHAR},
      </if>
      <if test="operateTime != null" >
        #{operateTime,jdbcType=VARCHAR},
      </if>
      <if test="operateType != null" >
        #{operateType,jdbcType=CHAR},
      </if>
      <if test="delayTime != null" >
        #{delayTime,jdbcType=INTEGER},
      </if>
      <if test="taskState != null" >
        #{taskState,jdbcType=CHAR},
      </if>
      <if test="operateSpec != null" >
        #{operateSpec,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.edp.dao.domain.TaskTracePoCriteria" resultType="java.lang.Integer" >
    select count(*) from task_trace
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update task_trace
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.taskId != null" >
        task_id = #{record.taskId,jdbcType=VARCHAR},
      </if>
      <if test="record.fromUser != null" >
        from_user = #{record.fromUser,jdbcType=VARCHAR},
      </if>
      <if test="record.toUser != null" >
        to_user = #{record.toUser,jdbcType=VARCHAR},
      </if>
      <if test="record.operateTime != null" >
        operate_time = #{record.operateTime,jdbcType=VARCHAR},
      </if>
      <if test="record.operateType != null" >
        operate_type = #{record.operateType,jdbcType=CHAR},
      </if>
      <if test="record.delayTime != null" >
        delay_time = #{record.delayTime,jdbcType=INTEGER},
      </if>
      <if test="record.taskState != null" >
        task_state = #{record.taskState,jdbcType=CHAR},
      </if>
      <if test="record.operateSpec != null" >
        operate_spec = #{record.operateSpec,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update task_trace
    set id = #{record.id,jdbcType=INTEGER},
      task_id = #{record.taskId,jdbcType=VARCHAR},
      from_user = #{record.fromUser,jdbcType=VARCHAR},
      to_user = #{record.toUser,jdbcType=VARCHAR},
      operate_time = #{record.operateTime,jdbcType=VARCHAR},
      operate_type = #{record.operateType,jdbcType=CHAR},
      delay_time = #{record.delayTime,jdbcType=INTEGER},
      task_state = #{record.taskState,jdbcType=CHAR},
      operate_spec = #{record.operateSpec,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update task_trace
    set id = #{record.id,jdbcType=INTEGER},
      task_id = #{record.taskId,jdbcType=VARCHAR},
      from_user = #{record.fromUser,jdbcType=VARCHAR},
      to_user = #{record.toUser,jdbcType=VARCHAR},
      operate_time = #{record.operateTime,jdbcType=VARCHAR},
      operate_type = #{record.operateType,jdbcType=CHAR},
      delay_time = #{record.delayTime,jdbcType=INTEGER},
      task_state = #{record.taskState,jdbcType=CHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.edp.dao.domain.TaskTracePo" >
    update task_trace
    <set >
      <if test="taskId != null" >
        task_id = #{taskId,jdbcType=VARCHAR},
      </if>
      <if test="fromUser != null" >
        from_user = #{fromUser,jdbcType=VARCHAR},
      </if>
      <if test="toUser != null" >
        to_user = #{toUser,jdbcType=VARCHAR},
      </if>
      <if test="operateTime != null" >
        operate_time = #{operateTime,jdbcType=VARCHAR},
      </if>
      <if test="operateType != null" >
        operate_type = #{operateType,jdbcType=CHAR},
      </if>
      <if test="delayTime != null" >
        delay_time = #{delayTime,jdbcType=INTEGER},
      </if>
      <if test="taskState != null" >
        task_state = #{taskState,jdbcType=CHAR},
      </if>
      <if test="operateSpec != null" >
        operate_spec = #{operateSpec,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.edp.dao.domain.TaskTracePo" >
    update task_trace
    set task_id = #{taskId,jdbcType=VARCHAR},
      from_user = #{fromUser,jdbcType=VARCHAR},
      to_user = #{toUser,jdbcType=VARCHAR},
      operate_time = #{operateTime,jdbcType=VARCHAR},
      operate_type = #{operateType,jdbcType=CHAR},
      delay_time = #{delayTime,jdbcType=INTEGER},
      task_state = #{taskState,jdbcType=CHAR},
      operate_spec = #{operateSpec,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.edp.dao.domain.TaskTracePo" >
    update task_trace
    set task_id = #{taskId,jdbcType=VARCHAR},
      from_user = #{fromUser,jdbcType=VARCHAR},
      to_user = #{toUser,jdbcType=VARCHAR},
      operate_time = #{operateTime,jdbcType=VARCHAR},
      operate_type = #{operateType,jdbcType=CHAR},
      delay_time = #{delayTime,jdbcType=INTEGER},
      task_state = #{taskState,jdbcType=CHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>